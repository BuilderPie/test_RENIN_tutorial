[{"path":"/articles/RENIN.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"RENIN tutorial for single cell multiome datasets","text":"tutorial applying RENIN single nucleus multiome dataset. tutorial, use adult human kidney single cell dataset generated work. full dataset can downloaded GEO smaller subsampled dataset downloadable repository. tutorial starts creation, quality control, preprocessing Seurat object provides example RENIN might applied regulatory element prediction.","code":""},{"path":"/articles/RENIN.html","id":"setup-environment","dir":"Articles","previous_headings":"","what":"Setup environment","title":"RENIN tutorial for single cell multiome datasets","text":"first prepare environment load Seurat object.","code":"library(Seurat) library(Signac) library(SeuratWrappers) library(RENIN)  multi <- readRDS(\"multi_allassays.RDS\")"},{"path":[]},{"path":"/articles/RENIN.html","id":"generate-pseudocell-for-cre-inference","dir":"Articles","previous_headings":"Predicting CREs with RENIN","what":"Generate pseudocell for CRE inference","title":"RENIN tutorial for single cell multiome datasets","text":"RENIN can used predict regulators differential expression two cell states. choose pseudobulk using modified version  VISION’s microclustering algorithm reduce effects sparsity noise. ~50,000 cell dataset, targeting 100 cells per pseudocell good starting point.","code":"mats <- prepare_pseudocell_matrix(multi, assay = c(\"peaks\", \"SCT\"), cells_per_partition = 100) expr_mat <- mats[[\"SCT\"]] peak_mat <- mats[[\"peaks\"]]"},{"path":"/articles/RENIN.html","id":"predict-cre","dir":"Articles","previous_headings":"Predicting CREs with RENIN","what":"Predict CRE","title":"RENIN tutorial for single cell multiome datasets","text":"good starting point modeling genes differentially expressed. first step predict CREs, use full dataset containing cell types, fewer CREs may differential accessibility two related cell types/states, relative accessibility differences two clusters rest dataset. default include CREs order include potential relevant regulatory TFs. adaptive elastic net step, lambda2 = 0.5 num_bootstraps = 100 good defaults achieve good model performance relatively short runtime.","code":"mpt <- subset(multi, celltype %in% c(\"PCT\", \"PST\", \"KIM1+ PT\")) de.genes = prepare_degs(mpt, ident.1 = c(\"PCT\", \"PST\"), ident.2 = \"KIM1+ PT\") gene_list <- rownames(de.genes)[1:100] peak_results <- run_peak_aen(multi, expr_mat, peak_mat, gene_list, lambda2 = 0.5, max_distance = 5e+05, num_bootstraps = 100) aen_lists <- make_aen_lists(peak_results)"},{"path":"/articles/RENIN.html","id":"optional-visualize-motif-enrichment-in-the-predicted-cres","dir":"Articles","previous_headings":"Predicting CREs with RENIN","what":"[Optional] Visualize motif enrichment in the predicted CREs","title":"RENIN tutorial for single cell multiome datasets","text":"[section can skipped]. starting point analysis, can look motif enrichment predicted CREs. modeled genes, identify -called “failed repair” genes upregulated KIM1+ PT relative healthy PCT PST clusters. can plot motif enrichment CREs predicted promote failed repair gene expression program.","code":"fr_genes <- rownames(de.genes)[which(de.genes$avg_log2FC < 0)] all_cres <- unique(unlist(aen_lists)) cre_scores <- lapply(peak_results, function(x) x[[4]][union(1, which(x[[4]][, \"coef_if_kept\"] != 0)), \"coef_if_kept\"] * ifelse(x[[1]] %in% fr_genes, -1, 1)) cre_scores <- cre_scores[which(unlist(lapply(cre_scores, length)) > 1)] cre_total_scores <- bind_rows(cre_scores) cre_total_scores[is.na(cre_total_scores)] <- 0 cre_total_scores <- cre_total_scores[,-1] cre_total_scores_sums <- colSums(cre_total_scores) cre_num_genes <- apply(cre_total_scores, 2, function(x) length(which(x != 0))) # how many genes each CRE targets fr_cres <- names(cre_total_scores_sums)[which(cre_total_scores_sums < 0)] h_cres <- names(cre_total_scores_sums)[which(cre_total_scores_sums > 0)]  plot_motif_enrichment(multi, fr_cres, num_top_label = 5)"},{"path":"/articles/RENIN.html","id":"predicting-gene-specific-regulating-tfs-with-renin","dir":"Articles","previous_headings":"","what":"Predicting gene-specific regulating TFs with RENIN","title":"RENIN tutorial for single cell multiome datasets","text":"RENIN’s second step identifies TFs motifs within linked CREs, runs adaptive elastic net step predict TFs likely regulate target gene.","code":""},{"path":"/articles/RENIN.html","id":"generate-pseudocell-for-tf-inference","dir":"Articles","previous_headings":"Predicting gene-specific regulating TFs with RENIN","what":"Generate pseudocell for TF inference","title":"RENIN tutorial for single cell multiome datasets","text":"Since use sparser chromatin accessibility modality step, can target fewer (default, 10) cells per pseudocell.","code":"expr_mat <- prepare_pseudocell_matrix(mpt, assay = \"SCT\", cells_per_partition = 10)"},{"path":"/articles/RENIN.html","id":"predict-cre-specific-tf-effects","dir":"Articles","previous_headings":"Predicting gene-specific regulating TFs with RENIN","what":"Predict CRE-specific TF effects","title":"RENIN tutorial for single cell multiome datasets","text":"","code":"tf_results <- run_tf_aen(mpt, expr_mat, peak_results, gene_list, lambda2 = 0.5)  regulator_tf_names <- unlist(multi@assays$peaks@motifs@motif.names) regulator_tf_names <- regulator_tf_names[which(regulator_tf_names %in% rownames(GetAssayData(multi, assay = \"SCT\")))]"},{"path":"/articles/RENIN.html","id":"visualize-tf-rankings","dir":"Articles","previous_headings":"Predicting gene-specific regulating TFs with RENIN","what":"Visualize TF rankings","title":"RENIN tutorial for single cell multiome datasets","text":"can rank TFs predicted regulatory score. calculate TF’s score, sum estimated regulatory coefficients across modeled genes, weight expression. studying trajectory, can input vector genes weighted negatively. allows delineation TFs associated one side trajectory versus .","code":"tf_df <- rank_tfs(tf_results, mpt, fr_genes, regulator_tf_names, num_cores = 1) plot_tf_rankings(tf_df)"},{"path":"/articles/RENIN.html","id":"optional-rank-tfs-by-centrality","dir":"Articles","previous_headings":"Predicting gene-specific regulating TFs with RENIN","what":"[Optional] Rank TFs by centrality","title":"RENIN tutorial for single cell multiome datasets","text":"Since ranking approach also factors TF expression, might useful rank TFs centrality well. ESRRG: 2362.5FOSL2: 1891.5MLXIPL: 0MYCN: 0TCF12: 0ARNT2: 0SREBF2: 0BACH2: 0JUN: 0MAF: 0 BACH2: 0.00440082608429252HNF4A: 0.00358041084460182ARNT2: 0.0035757804040999MEF2A: 0.00341289182564679FOSL1: 0.00335173645748952FOSL2: 0.00326196417548944TCF12: 0.00325942429318295KLF6: 0.00324040156752685PPARA: 0.00323273905631062NFAT5: 0.00310403256911354","code":"centrality_rankings <- rank_tfs_by_centrality(tf_results, mpt) head(centrality_rankings[[1]], n = 10) head(centrality_rankings[[2]], n = 10)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Ledru. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ledru N (2023). RENIN: Regulatory Network Inference single cell multiomic data. R package version 1.0.","code":"@Manual{,   title = {RENIN: Regulatory Network Inference with single cell multiomic data},   author = {Nicolas Ledru},   year = {2023},   note = {R package version 1.0}, }"},{"path":[]},{"path":"/index.html","id":"regulatory-network-inference-with-single-cell-multiomic-data","dir":"","previous_headings":"","what":"Regulatory Network Inference with single cell multiomic data","title":"Regulatory Network Inference with single cell multiomic data ","text":"RENIN generates parametric gene regulatory networks, predicting cis-regulatory elements transcription factors.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Regulatory Network Inference with single cell multiomic data ","text":"can install RENIN devtools: Additional dependencies listed DESCRIPTION file. RENIN designed work within Seurat workflow.","code":"library(devtools) install_github(\"nledru/RENIN\")"},{"path":"/index.html","id":"running-renin","dir":"","previous_headings":"","what":"Running RENIN","title":"Regulatory Network Inference with single cell multiomic data ","text":"brief introduction running RENIN single cell dataset, see vignette Getting started.","code":""},{"path":"/reference/UpstreamDistanceToTSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function taken from Signac DistanceToTSS function, for considering only upstream promoter region for peaks — UpstreamDistanceToTSS","title":"Utility function taken from Signac DistanceToTSS function, for considering only upstream promoter region for peaks — UpstreamDistanceToTSS","text":"function copy Signac DistanceToTSS function, except changing downstream parameter Extend function call distance 0.","code":""},{"path":"/reference/UpstreamDistanceToTSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function taken from Signac DistanceToTSS function, for considering only upstream promoter region for peaks — UpstreamDistanceToTSS","text":"","code":"UpstreamDistanceToTSS(peaks, genes, distance = 2e+05, sep = c(\"-\", \"-\"))"},{"path":"/reference/apply_multi_micro_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform microclustering on dataset for pseudocell generation — apply_multi_micro_clustering","title":"Perform microclustering on dataset for pseudocell generation — apply_multi_micro_clustering","text":"function takes input Seurat object generates weighted nearest neighbor (WNN) graph needed. performs commnunity detection Louvain clustering returns list pools denoting individual cells comprise pseudocell","code":""},{"path":"/reference/apply_multi_micro_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform microclustering on dataset for pseudocell generation — apply_multi_micro_clustering","text":"","code":"apply_multi_micro_clustering(   seurat,   cells_per_partition = 100,   find_neighbors = FALSE,   reduction1 = \"harmony\",   reduction2 = \"harmony_peaks\",   dim_list = list(1:50, 1:50),   k.nn = 5 )"},{"path":"/reference/apply_multi_micro_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform microclustering on dataset for pseudocell generation — apply_multi_micro_clustering","text":"seurat Seurat object cells_per_partition Targeted number cells per partition find_neighbors Boolean designating whether run Seurat's FindMultiModalNeighbors. Set FALSE already run reduction1 Reduction 1 use FindMultiModalNeighbors, find_neighbors TRUE reduction2 Reduction 2 use FindMultiModalNeighbors, find_neighbors TRUE dim_list List dimensions use FindMultiModalNeighbors, find_neighbors TRUE k.nn Number nearest neighbors use KNN algorithm, find_neighbors TRUE","code":""},{"path":"/reference/apply_multi_micro_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform microclustering on dataset for pseudocell generation — apply_multi_micro_clustering","text":"List individual cell communities make called pseudocell List individual cell barcodes pseudocell","code":""},{"path":"/reference/make_aen_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function that extracts names of peaks with predicted non-zero regulatory effect — make_aen_lists","title":"Utility function that extracts names of peaks with predicted non-zero regulatory effect — make_aen_lists","text":"function takes output run_peak_aen returns names predicted CREs, non-zero regulatory effect, modeled gene.","code":""},{"path":"/reference/make_aen_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function that extracts names of peaks with predicted non-zero regulatory effect — make_aen_lists","text":"","code":"make_aen_lists(peak_results)"},{"path":"/reference/make_aen_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function that extracts names of peaks with predicted non-zero regulatory effect — make_aen_lists","text":"peak_results Output run_peak_aen, list lists format","code":""},{"path":"/reference/make_aen_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function that extracts names of peaks with predicted non-zero regulatory effect — make_aen_lists","text":"List character vectors, corresponding predicted CRE names modeled gene","code":""},{"path":"/reference/make_bootstrap_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate seeds for reproducibility when sampling from the starting dataset to perform bootstrapping — make_bootstrap_sequences","title":"Generate seeds for reproducibility when sampling from the starting dataset to perform bootstrapping — make_bootstrap_sequences","text":"function generate seeds bootstrapping modeled gene. takes desired number bootstrap samples list genes input returns list, named inputted genes, lists seeds.","code":""},{"path":"/reference/make_bootstrap_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate seeds for reproducibility when sampling from the starting dataset to perform bootstrapping — make_bootstrap_sequences","text":"","code":"make_bootstrap_sequences(num_bootstraps, gene_names)"},{"path":"/reference/make_bootstrap_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate seeds for reproducibility when sampling from the starting dataset to perform bootstrapping — make_bootstrap_sequences","text":"num_bootstraps Number bootstrap samples gene_names Modeled gene names dims.list list containing dimensions reduction use","code":""},{"path":"/reference/make_bootstrap_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate seeds for reproducibility when sampling from the starting dataset to perform bootstrapping — make_bootstrap_sequences","text":"List named inputted gene names, lists seeds, length num_bootstraps","code":""},{"path":"/reference/make_model_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to convert list of lists run_aen_tf output to data frame — make_model_df","title":"Utility function to convert list of lists run_aen_tf output to data frame — make_model_df","text":"function extracts predicted non-zero regulatory interactions TFs genes output run_aen_tf, stores information data frame.","code":""},{"path":"/reference/make_model_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to convert list of lists run_aen_tf output to data frame — make_model_df","text":"","code":"make_model_df(tf_results)"},{"path":"/reference/make_model_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to convert list of lists run_aen_tf output to data frame — make_model_df","text":"tf_results Output run_tf_aen, list lists format","code":""},{"path":"/reference/make_model_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to convert list of lists run_aen_tf output to data frame — make_model_df","text":"Data frame regulatory interactions, TFs row modeled genes column","code":""},{"path":"/reference/peaks_to_tfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function used to convert a peak list for a given gene to a list of TFs with predicted motifs within the peak list — peaks_to_tfs","title":"Utility function used to convert a peak list for a given gene to a list of TFs with predicted motifs within the peak list — peaks_to_tfs","text":"function takes peak list peak-TF key input returns TF names least one motif present peak list, determined peak-TF key.","code":""},{"path":"/reference/peaks_to_tfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function used to convert a peak list for a given gene to a list of TFs with predicted motifs within the peak list — peaks_to_tfs","text":"","code":"peaks_to_tfs(peak_list, key_tibble)"},{"path":"/reference/peaks_to_tfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function used to convert a peak list for a given gene to a list of TFs with predicted motifs within the peak list — peaks_to_tfs","text":"peak_list Vector peak names key_tibble Tibble peaks motifs denoting presence motif peak","code":""},{"path":"/reference/peaks_to_tfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function used to convert a peak list for a given gene to a list of TFs with predicted motifs within the peak list — peaks_to_tfs","text":"Names TFs motifs within inputted peaks","code":""},{"path":"/reference/perturb_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to perturb specific TFs in an idnvidual cell — perturb_cells","title":"Utility function to perturb specific TFs in an idnvidual cell — perturb_cells","text":"function takes expression cell names TFs either upregulate knock . magnitude perturbation measured multiples standard deviation TF's expression dataset. order mimic long term TF upregulation knock , higher multiples can inputted. Negative gene expression knock set 0. function returns expression values cell altered expression specified perturbed TFs.","code":""},{"path":"/reference/perturb_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to perturb specific TFs in an idnvidual cell — perturb_cells","text":"","code":"perturb_cells(   cell,   perturbed_tfs_up,   perturbed_tfs_down,   mean_var_df,   how_much = 1 )"},{"path":"/reference/perturb_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to perturb specific TFs in an idnvidual cell — perturb_cells","text":"cell Expression individual cell perturbed_tfs_up Names TFs upregulate perturbed_tfs_down Names TFs knock mean_var_df Data frame mean expression standard deviation modeled genes how_much Vector multiples multiply standard deviation determine perturbation amount ","code":""},{"path":"/reference/perturb_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to perturb specific TFs in an idnvidual cell — perturb_cells","text":"cell updated, perturbed expression","code":""},{"path":"/reference/plot_footprinting.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Tn5 integration enrichment between two sets of CREs/peaks — plot_footprinting","title":"Plot Tn5 integration enrichment between two sets of CREs/peaks — plot_footprinting","text":"function modified Signac's PlotFootprint function. plots Tn5 enrichment around inputted motifs two sets peaks, stored assay.1 assay.2. Functionality remains preserved, exception plotting Tn5 enrichment two distinct peak sets, returning plots Tn5 integration enrichment motif","code":""},{"path":"/reference/plot_footprinting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Tn5 integration enrichment between two sets of CREs/peaks — plot_footprinting","text":"","code":"plot_footprinting(   object,   assay.1,   assay.2,   features,   group.by = NULL,   idents = NULL,   label = TRUE,   repel = TRUE,   show.expected = TRUE,   normalization = \"subtract\",   label.top = 3,   label.idents = NULL,   colors = c(\"#39B54A\", \"#5862AD\") )"},{"path":"/reference/plot_footprinting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Tn5 integration enrichment between two sets of CREs/peaks — plot_footprinting","text":"object Seurat object assay.1 Assay containing first set peaks assay.2 Assay containing second set peaks features TF motifs plot adjacent Tn5 enrichment group.Grouping variable use idents Identities group cells label Boolean whether label groups repel Boolean whether repel labels show.expected Boolean whether plot expected Tn5 integration normalization Method normalization Tn5 integration bias label.top Number top groups label label.idents Names identities label colors Colors plotted CRE set","code":""},{"path":"/reference/plot_footprinting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Tn5 integration enrichment between two sets of CREs/peaks — plot_footprinting","text":"ggplot Tn5 enrichment plots motif","code":""},{"path":"/reference/plot_graph_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to generate graph analysis plots — plot_graph_rankings","title":"Function to generate graph analysis plots — plot_graph_rankings","text":"function produce plots graph analysis predicted gene regulatory networks. takes output run_tf_aen generates graph ranking plots top TFs. calculates two centrality measures, betweenness PageRank, determine central TFs plot. order prioritize TFs central, rather targets, PageRank, edges reversed. function returns graph ranking plot measure centrality.","code":""},{"path":"/reference/plot_graph_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to generate graph analysis plots — plot_graph_rankings","text":"","code":"plot_graph_rankings(   tf_results,   regulator_tf_names,   seurat,   top_n_graph = 20,   top_n_ranking = 25,   layout_algorithm = \"kk\",   color = \"#5862AD\" )"},{"path":"/reference/plot_graph_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to generate graph analysis plots — plot_graph_rankings","text":"tf_results List output returned run_tf_aen trained model information regulator_tf_names List TFs motif expression information dataset top_n_graph Number central TFs plot gene regulatory network graph plots top_n_ranking Number central TFs plot ranking plots layout_algorithm Algorithm used construct gene regulatory network graphs. Options star, circle, gem, dh, graphopt, grid, mds, randomly, fr, drl, lgl, kk color Color points ranking plots","code":""},{"path":"/reference/plot_graph_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to generate graph analysis plots — plot_graph_rankings","text":"list plots, two graphs top TFs betweenness PageRank labeled two ranking plots top TFs betweenness PageRank","code":""},{"path":"/reference/plot_motif_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot motif enrichment volcano plot — plot_motif_enrichment","title":"Plot motif enrichment volcano plot — plot_motif_enrichment","text":"function plot one-sided volcano plot motif enrichment provided CRE/peak set. Axes fold enrichment along x-axis -log(p-value) along y-axis. Optional parameters control labeling specific motifs. function returns ggplot, x-axis can flipped desired, may useful comparing motif enrichment two sets CREs.","code":""},{"path":"/reference/plot_motif_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot motif enrichment volcano plot — plot_motif_enrichment","text":"","code":"plot_motif_enrichment(   seurat,   cres,   motifs_to_label = NULL,   num_top_label = 10,   label_bottom = TRUE,   num_bottom_label = 5,   color = \"#5862AD\",   flip = FALSE )"},{"path":"/reference/plot_motif_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot motif enrichment volcano plot — plot_motif_enrichment","text":"seurat Seurat object cres CRE/peak set perform motif enrichment motifs_to_label Names motifs label plot num_top_label Number top motifs label plot motifs_to_label NULL label_bottom Boolean label least enriched motifs num_bottom_label labeling least enriched motifs, number motifs label color Color points plot flip Boolean flip x axis. May useful plot motif enrichment two sets CREs side--side","code":""},{"path":"/reference/plot_motif_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot motif enrichment volcano plot — plot_motif_enrichment","text":"ggplot motif enrichment, fold enrichment vs -log(p-value)","code":""},{"path":"/reference/plot_tf_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot TFs ordered by regulatory score — plot_tf_rankings","title":"Plot TFs ordered by regulatory score — plot_tf_rankings","text":"function inputs output rank_tfs plot TF regulatory scores, ordered along x-axis. TFs estimated scores differ 0 based p_value_cutoff meet score_cutoff threshold trimmed trim middle plot less relevant TFs. function returns ggplot ordered rankings.","code":""},{"path":"/reference/plot_tf_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot TFs ordered by regulatory score — plot_tf_rankings","text":"","code":"plot_tf_rankings(   results_df,   tfs_to_label = NULL,   p_value_cutoff = 0.05,   score_cutoff = 0.1,   two_tailed = TRUE,   top_n_to_label = 5,   label_tfs = TRUE,   colors = c(\"5862AD\", \"#39B54A\") )"},{"path":"/reference/plot_tf_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot TFs ordered by regulatory score — plot_tf_rankings","text":"results_df Data frame output rank_tfs, regulatory score standard error TF tfs_to_label Names TFs label plot p_value_cutoff P value cutoff TFs removed plot. Set 1 exclude TFs score_cutoff Cutoff absolute value regulatory score TFs removed plot. Set 0 exclude TFs two_tailed Boolean whether P value cutoff two-tailed test top_n_to_label Number top positive negative TFs label plot tfs_to_label NULL label_tfs Boolean whether label TFs plot colors Colors negative positive regulatory scores","code":""},{"path":"/reference/plot_tf_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot TFs ordered by regulatory score — plot_tf_rankings","text":"ggplot motif enrichment, fold enrichment vs -log(p-value)","code":""},{"path":"/reference/prepare_degs.html","id":null,"dir":"Reference","previous_headings":"","what":"Select differentially expressed genes for regression — prepare_degs","title":"Select differentially expressed genes for regression — prepare_degs","text":"wrapper function Seurat FindMarkers function, taking input Seurat object parameters call differentially expressed genes two cell groups, removing genes Seurat's object genome annotation, CREs model selected without gene coordinates.","code":""},{"path":"/reference/prepare_degs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select differentially expressed genes for regression — prepare_degs","text":"","code":"prepare_degs(   seurat,   ident.1,   ident.2,   group.by = NULL,   min.pct = 0.1,   assay = \"SCT\",   slot = \"data\",   p_val_cutoff = 0.05,   peak_assay = \"peaks\",   ... )"},{"path":"/reference/prepare_degs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select differentially expressed genes for regression — prepare_degs","text":"seurat Seurat object ident.1 Character character vector cell identities group 1 ident.2 Character character vector cell identities group 2 group.Name metadata column use group cells , NULL using stored cell identities min.pct min.pct FindMarkers assay Expression assay use slot Expression assay slot use p_val_cutoff Adjusted p value cutoff filter DEG list peak_assay Assay contains genomic annotation","code":""},{"path":"/reference/prepare_degs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select differentially expressed genes for regression — prepare_degs","text":"List named inputted gene names, lists seeds, length num_bootstraps Differential gene expression data frame","code":""},{"path":"/reference/prepare_pseudocell_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate pseudocell matrix — prepare_pseudocell_matrix","title":"Generate pseudocell matrix — prepare_pseudocell_matrix","text":"order reduce sparsity noise, can elect generate pseudocell dataset. function takes input Seurat object, desired assay slot use pseudocell creation, number cells per partition target. pools individual cells pseudocells modified version VISION's microclustering algorithm work multiomic WNN graph. pseudocell's expression/accessibility average constituent individual cells' expression/accessibility. output matrix row pseudocell, column gene/peak specified assay.","code":""},{"path":"/reference/prepare_pseudocell_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate pseudocell matrix — prepare_pseudocell_matrix","text":"","code":"prepare_pseudocell_matrix(   seurat,   assay,   slot = \"data\",   cells_per_partition = 100,   find_neighbors = FALSE,   reduction1 = \"harmony\",   reduction2 = \"harmony_peaks\",   dim_list = list(1:50, 1:50),   k.nn = 5,   seed = 489284 )"},{"path":"/reference/prepare_pseudocell_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate pseudocell matrix — prepare_pseudocell_matrix","text":"seurat Seurat object assay Expression accessibility assay use slot Expression accessibility assay slot use cells_per_partition Targeted number cells per partition find_neighbors Boolean designating whether run Seurat's FindMultiModalNeighbors. Set FALSE already run reduction1 Reduction 1 use FindMultiModalNeighbors, find_neighbors TRUE reduction2 Reduction 2 use FindMultiModalNeighbors, find_neighbors TRUE dim_list List dimensions use FindMultiModalNeighbors, find_neighbors TRUE k.nn Number nearest neighbors use KNN algorithm, find_neighbors TRUE seed Seed reproducibility, set NULL needed","code":""},{"path":"/reference/prepare_pseudocell_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate pseudocell matrix — prepare_pseudocell_matrix","text":"Pseudocell expression/accessibility data frame","code":""},{"path":"/reference/rank_tfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to rank TFs based on model results — rank_tfs","title":"Function to rank TFs based on model results — rank_tfs","text":"function ranks TFs regulatory influence provided tf_results list. summing regulatory coefficients TF across genes. default, weights summed coefficients mean expression TF, following hypothesis highly expressed TFs likely relevant lowly expressed TFs, computed regulatory score effectively number target transcripts increased one unit expression given TF. Optionally, names genes weight negatively can provided order weight regulatory coefficients modeled gene. can helpful ranking TFs predicted regulate set differentially expressed genes order predict TFs associated potentially drive either side comparison.","code":""},{"path":"/reference/rank_tfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to rank TFs based on model results — rank_tfs","text":"","code":"rank_tfs(   tf_results,   negative_genes,   regulator_tf_names,   seurat,   weight_by_expr = TRUE,   expr_assay = \"SCT\",   slot = \"data\",   num_cores = 4 )"},{"path":"/reference/rank_tfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to rank TFs based on model results — rank_tfs","text":"tf_results List output returned run_tf_aen trained model information negative_genes Genes weight negatively trying associate TFs one two sides trajectory/lineage regulator_tf_names List TFs motif expression information dataset seurat Seurat object weight_by_expr Boolean multiply estimated regulatory coefficients mean TF expression expr_assay Expression assay use slot Assay slot use num_cores Number cores use parallelization","code":""},{"path":"/reference/rank_tfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to rank TFs based on model results — rank_tfs","text":"Data frame regulatory scores TF","code":""},{"path":"/reference/rank_tfs_by_centrality.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to rank TFs based on graph analysis of model results — rank_tfs_by_centrality","title":"Function to rank TFs based on graph analysis of model results — rank_tfs_by_centrality","text":"function ranks TFs centrality provided tf_results list. constructing gene regulatory networks using estimated coefficients TF gene. function returns two rankings centrality: betweenness PageRank. order prioritize TFs central, rather targets, PageRank, edges reversed.","code":""},{"path":"/reference/rank_tfs_by_centrality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to rank TFs based on graph analysis of model results — rank_tfs_by_centrality","text":"","code":"rank_tfs_by_centrality(tf_results, seurat, assay = \"SCT\", slot = \"data\")"},{"path":"/reference/rank_tfs_by_centrality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to rank TFs based on graph analysis of model results — rank_tfs_by_centrality","text":"tf_results List output returned run_tf_aen trained model information","code":""},{"path":"/reference/rank_tfs_by_centrality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to rank TFs based on graph analysis of model results — rank_tfs_by_centrality","text":"List two rankings, one betweenness one PageRank","code":""},{"path":"/reference/run_aen_peaks_for_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Run adaptive elastic net to identify CREs regulating an individual gene — run_aen_peaks_for_gene","title":"Run adaptive elastic net to identify CREs regulating an individual gene — run_aen_peaks_for_gene","text":"function identify putative cis-regulatory elements regulating target gene. takes input input list, containing potential regulatory CREs, recommended determined distance gene TSS, pseudocell expression matrix generated prepare_pseudocell_matrix, parameters running adaptive elastic net. function first performs cross-validation step calculate optimal lambda well adaptive L1 penalty weights. ,adaptive elastic net step performed bootstrapping determine regulatory coefficients. Information returned modeled gene list, containing following information: coefficient determination calculated cross validation step calculated lambda value, trained model object, data frame regulatory weights standard errors statistically significant TFs. Regulatory weights non-significant TFs set 0 future analysis desired.","code":""},{"path":"/reference/run_aen_peaks_for_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run adaptive elastic net to identify CREs regulating an individual gene — run_aen_peaks_for_gene","text":"","code":"run_aen_peaks_for_gene(   input_list,   pseudocell_matrix,   train_fraction = 0.8,   set_seed = TRUE,   lambda = \"lambda.min\",   lambda2 = 0.5,   gamma = 1,   ci_cutoff = 1.96,   pval_cutoff = NULL,   set_nonsig_to_zero = TRUE,   recalculate_l1 = FALSE,   ... )"},{"path":"/reference/run_aen_peaks_for_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run adaptive elastic net to identify CREs regulating an individual gene — run_aen_peaks_for_gene","text":"pseudocell_matrix Pseudocell chromatin accessibility matrix use train_fraction Fraction pseudocells used training cross-validation step set_seed Boolean determine whether set seeds inputted bootstrap seeds lambda Can lambda.min, lambda.1se otherwise. cross-validation step, determines whether select optimal value lambda gives smallest cross validation error (lambda.min) largest lambda value error within 1 standard error minimum error (lambda.1se) lambda2 Parameter quadratic L2 penalty regularization gamma Positive constant calculating adaptive weights ci_cutoff Confidence interval cutoff used determine whether estimated non-zero coefficient kept pval_cutoff alternative, p value cutoff use order calculate ci_cutoff. E.g. p value 0.5 corresponds 95% CI set_nonsig_to_zero Boolean determine whether non-significant coefficient estimates set zero recalculate_l1 Boolean determine whether recalculate adaptive L1 penalty weights bootstrapped sample. Set FALSE default reduce runtime input_tf_list List containing gene name, putative regulatory CREs consider, bootstrap seeds","code":""},{"path":"/reference/run_aen_peaks_for_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run adaptive elastic net to identify CREs regulating an individual gene — run_aen_peaks_for_gene","text":"List containing gene name, coefficient determination, trained model, coefficient data frame","code":""},{"path":"/reference/run_aen_tfs_for_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Run adaptive elastic net to identify TFs regulating an individual gene — run_aen_tfs_for_gene","title":"Run adaptive elastic net to identify TFs regulating an individual gene — run_aen_tfs_for_gene","text":"function identify putative transcription factors regulating target gene. takes input input list, containing potential regulatory TFs, recommended determined motif information, pseudocell expression matrix generated prepare_pseudocell_matrix, parameters running adaptive elastic net. function first performs cross-validation step calculate optimal lambda well adaptive L1 penalty weights. adaptive elastic net step performed bootstrapping determine regulatory coefficients. Information returned modeled gene list, containing following information: coefficient determination calculated cross validation step calculated lambda value, trained model object, data frame regulatory weights standard errors statistically significant TFs. Regulatory weights non-significant TFs set 0 future analysis desired.","code":""},{"path":"/reference/run_aen_tfs_for_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run adaptive elastic net to identify TFs regulating an individual gene — run_aen_tfs_for_gene","text":"","code":"run_aen_tfs_for_gene(   input_tf_list,   pseudocell_matrix,   regulator_names,   train_fraction = 0.8,   set_seed = TRUE,   lambda = \"lambda.min\",   lambda2 = 0.5,   gamma = 1,   ci_cutoff = 1.96,   pval_cutoff = NULL,   set_nonsig_to_zero = TRUE,   recalculate_l1 = FALSE,   ... )"},{"path":"/reference/run_aen_tfs_for_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run adaptive elastic net to identify TFs regulating an individual gene — run_aen_tfs_for_gene","text":"input_tf_list List containing gene name, putative regulatory TFs consider, bootstrap seeds pseudocell_matrix Pseudocell expression matrix use regulator_names Optionally, list TF names model. TFs within list, NULL, excluded train_fraction Fraction pseudocells used training cross-validation step set_seed Boolean determine whether set seeds inputted bootstrap seeds lambda Can lambda.min, lambda.1se otherwise. cross-validation step, determines whether select optimal value lambda gives smallest cross validation error (lambda.min) largest lambda value error within 1 standard error minimum error (lambda.1se) lambda2 Parameter quadratic L2 penalty regularization gamma Positive constant calculating adaptive weights ci_cutoff Confidence interval cutoff used determine whether estimated non-zero coefficient kept pval_cutoff alternative, p value cutoff use order calculate ci_cutoff. E.g. p value 0.5 corresponds 95% CI set_nonsig_to_zero Boolean determine whether non-significant coefficient estimates set zero recalculate_l1 Boolean determine whether recalculate adaptive L1 penalty weights bootstrapped sample. Set FALSE default reduce runtime","code":""},{"path":"/reference/run_aen_tfs_for_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run adaptive elastic net to identify TFs regulating an individual gene — run_aen_tfs_for_gene","text":"List containing gene name, coefficient determination, trained model, coefficient data frame","code":""},{"path":"/reference/run_peak_aen.html","id":null,"dir":"Reference","previous_headings":"","what":"Run adaptive elastic net to identify CREs regulating target genes — run_peak_aen","title":"Run adaptive elastic net to identify CREs regulating target genes — run_peak_aen","text":"function identify putative cis-regultory elements inputted genes. takes input Seurat object, pseudocell matrices generated prepare_pseudocell_matrix, list genes wish model, parameters running adaptive elastic net parallelization. Genes without genomic peaks (mitochondrial) provided Annotation excluded, names printed verbose TRUE. function returns information modeled gene list. gene's entry list list containing following information: coefficient determination calculated cross validation step calculated lambda.min value, trained model object, data frame regulatory weights standard errors statistically significant CREs. Regulatory weights non-significant CREs set 0 future analysis desired.","code":""},{"path":"/reference/run_peak_aen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run adaptive elastic net to identify CREs regulating target genes — run_peak_aen","text":"","code":"run_peak_aen(   seurat,   pseudocell_mat,   pseudocell_mat_peaks,   gene_list,   lambda2 = 0.5,   gamma = 1,   ci_cutoff = 1.96,   pval_cutoff = NULL,   set_nonsig_to_zero = TRUE,   max_distance = 5e+05,   train_fraction = 0.8,   num_bootstraps = 1000,   bootstrap = TRUE,   num_threads = 16,   globals_maxsize = NULL,   verbose = TRUE,   bs_seed = 943126,   multi_seed = 6283408,   ... )"},{"path":"/reference/run_peak_aen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run adaptive elastic net to identify CREs regulating target genes — run_peak_aen","text":"seurat Seurat object pseudocell_mat Pseudocell expression matrix use pseudocell_mat_peaks Pseudocell chromatin accessibility matrix use gene_list Names genes model lambda2 Parameter quadratic L2 penalty regularization gamma Positive constant calculating adaptive weights ci_cutoff Confidence interval cutoff used determine whether estimated non-zero coefficient kept pval_cutoff alternative, p value cutoff use order calculate ci_cutoff. E.g. p value 0.5 corresponds 95% CI. set_nonsig_to_zero Boolean determine whether non-significant coefficient estimates set zero max_distance Max distance modeled gene's TSS include CREs building gene regulatory network model train_fraction Fraction pseudocells used training cross-validation step num_bootstraps Number bootstrap samples bootstrap Boolean set false, perform bootstrapping num_threads Number threads use multithreading globals_maxsize running RAM problems multithreading, can use parameter set future.globals.maxSize done manually verbose Boolean determine whether run silently bs_seed Seed reproducibility determining bootstrap seeds, set NULL needed multi_seed Seed reproducibility multithreaded model training, set NULL needed","code":""},{"path":"/reference/run_peak_aen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run adaptive elastic net to identify CREs regulating target genes — run_peak_aen","text":"list lists per modeled gene, containing modeling CRE gene regulatory network information","code":""},{"path":"/reference/run_tf_aen.html","id":null,"dir":"Reference","previous_headings":"","what":"Run adaptive elastic net to identify TFs regulating target genes — run_tf_aen","title":"Run adaptive elastic net to identify TFs regulating target genes — run_tf_aen","text":"function identify putative transcription factors regulating inputted genes. takes input Seurat object, returned value run_peak_aen, pseudocell expression matrix generated prepare_pseudocell_matrix, parameters running adaptive elastic net parallelization. Optionally, list genes wish model can provided running promoter_only mode, non-promoter CREs ignored searching TF motifs include modeling step. Genes without predicted linked CREs peaks within distance specified promoter_threshold gene's TSS excluded, names printed verbose TRUE. function returns information modeled gene list. gene's entry list list containing following information: coefficient determination calculated cross validation step calculated lambda.min value, trained model object, data frame regulatory weights standard errors statistically significant TFs. Regulatory weights non-significant TFs set 0 future analysis desired.","code":""},{"path":"/reference/run_tf_aen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run adaptive elastic net to identify TFs regulating target genes — run_tf_aen","text":"","code":"run_tf_aen(   seurat,   pseudocell_mat,   aen_results_peaks = peak_results,   gene_list = NULL,   lambda2 = 0.5,   gamma = 1,   ci_cutoff = 1.96,   pval_cutoff = NULL,   set_nonsig_to_zero = TRUE,   promoter_only = FALSE,   promoter_threshold = 2000,   train_fraction = 0.8,   num_bootstraps = 100,   bootstrap = TRUE,   num_threads = 16,   globals_maxsize = NULL,   verbose = TRUE,   bs_seed = 943126,   peak_assay = \"peaks\",   multi_seed = 6283408,   ... )"},{"path":"/reference/run_tf_aen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run adaptive elastic net to identify TFs regulating target genes — run_tf_aen","text":"seurat Seurat object pseudocell_mat Pseudocell expression matrix use aen_results_peaks Lists modeling information returned running run_peak_aen list genes interest gene_list Optionally names genes model, using modeled CREs using promoter regions lambda2 Parameter quadratic L2 penalty regularization gamma Positive constant calculating adaptive weights ci_cutoff Confidence interval cutoff used determine whether estimated non-zero coefficient kept pval_cutoff alternative, p value cutoff use order calculate ci_cutoff. E.g. p value 0.5 corresponds 95% CI. set_nonsig_to_zero Boolean determine whether non-significant coefficient estimates set zero promoter_only Boolean determining whether modeling run TFs motifs present gene promoter regions promoter_threshold Distance TSS determine promoter region classify overlapping peaks dataset promoter peaks train_fraction Fraction pseudocells used training cross-validation step num_bootstraps Number bootstrap samples bootstrap Boolean set false, perform bootstrapping num_threads Number threads use multithreading globals_maxsize running RAM problems multithreading, can use parameter set future.globals.maxSize done manually verbose Boolean determine whether run silently bs_seed Seed reproducibility determining bootstrap seeds, set NULL needed multi_seed Seed reproducibility multithreaded model training, set NULL needed","code":""},{"path":"/reference/run_tf_aen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run adaptive elastic net to identify TFs regulating target genes — run_tf_aen","text":"list lists per modeled gene, containing modeling TF gene regulatory network information","code":""},{"path":"/reference/simulate_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to simulate a cell based on current expression and trained gene regulatory network model — simulate_cell","title":"Utility function to simulate a cell based on current expression and trained gene regulatory network model — simulate_cell","text":"function takes expression cell data frame consisting estimated regulatory coefficients TF gene. simulates new expression values result perturbing set TFs.","code":""},{"path":"/reference/simulate_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to simulate a cell based on current expression and trained gene regulatory network model — simulate_cell","text":"","code":"simulate_cell(cell, model, genes, tfs)"},{"path":"/reference/simulate_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to simulate a cell based on current expression and trained gene regulatory network model — simulate_cell","text":"cell Expression individual cell model Data frame regulatory coefficients TF gene genes Gene names present model tfs TF names present model","code":""},{"path":"/reference/simulate_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to simulate a cell based on current expression and trained gene regulatory network model — simulate_cell","text":"cell updated, simulated expression","code":""},{"path":"/reference/simulate_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to simulate the results of perturbing a set of TFs in Seurat dataset — simulate_dataset","title":"Function to simulate the results of perturbing a set of TFs in Seurat dataset — simulate_dataset","text":"function inputs Seurat object, samples cells specified cell type, target_celltype, perturbs specified TFs , simulates results perturbations using model data frame contains estimated regulatory coefficients TF modeled gene. function merges original Seurat object perturbed simulated cells plotting.","code":""},{"path":"/reference/simulate_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to simulate the results of perturbing a set of TFs in Seurat dataset — simulate_dataset","text":"","code":"simulate_dataset(   seurat,   target_celltype = c(),   end_celltype = c(),   model = aen_model,   genes = rownames(aen_model),   tfs = colnames(aen_model),   perturbed_tfs_up = c(),   perturbed_tfs_down = c(),   mean_var_df = mean_var,   how_much = c(1, 5, 10),   num_starting_cells = 500,   set.seed = TRUE )"},{"path":"/reference/simulate_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to simulate the results of perturbing a set of TFs in Seurat dataset — simulate_dataset","text":"seurat Seurat object target_celltype Starting cell type(s) sample , order perturb simulate end_celltype Ending cell type(s) sample , useful plot simulated cells assess trajectory model Data frame regulatory coefficients TF gene genes Gene names present model tfs TF names present model perturbed_tfs_up Names TFs upregulate perturbed_tfs_down Names TFs knock mean_var_df Data frame mean expression standard deviation modeled genes how_much Vector multiples multiply standard deviation determine perturbation amount num_starting_cells Number starting cells sample target_celltype group simulate set.seed Boolean whether set seed reproducibility testing","code":""},{"path":"/reference/simulate_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to simulate the results of perturbing a set of TFs in Seurat dataset — simulate_dataset","text":"Seurat object perturbed simulated cells added","code":""}]
